apiVersion: apps/v1
kind: Deployment
metadata:
  name: kargo-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kargo-demo
  template:
    metadata:
      labels:
        app: kargo-demo
    spec:
      initContainers:
      - name: git
        image: alpine/git
        command: ["/bin/sh", "-c", "if [ -d /data/kargo ]; then cd /data/kargo; git pull; else git clone --single-branch -- https://$(GITHUB_USERNAME):$(GITHUB_PAT)@github.com/pc085n/gin-test.git /data/kargo; fi"]
        env:
        - name: GITHUB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kargo-demo-repo
        - name: GITHUB_PAT
          valueFrom:
            secretKeyRef:
              key: password
              name: kargo-demo-repo
        volumeMounts:
        - mountPath: /data
          name: test-volume
      containers:
      - name: gin-qa-solutions
        image: docker.io/ccipearl/gin-qa-solutions:1.0.2
        imagePullPolicy: Always
        volumeMounts:
        - name: test-volume
          mountPath: /usr/share/gin-qa-solutions/html
      volumes:
      - name: content
        configMap:
          name: kargo-demo-content
      - name: test-volume
        persistentVolumeClaim:
          claimName: kargo-pvc
